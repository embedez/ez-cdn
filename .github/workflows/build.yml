on:
  push:
    branches: [ "master", "main", "edge" ]
  workflow_dispatch:

permissions:
  packages: write
  contents: read


jobs:
  build:
    name: Build Express App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract branch name
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF##*/} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Lowercase repository
        run: |
          echo "REPO_LOWERCASE=$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the version
        run: |
          echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            
      - name: Set Docker image
        run: |
          echo "DOCKER_IMAGE=ghcr.io/${{ env.REPO_LOWERCASE }}:${{ env.VERSION }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}
            ghcr.io/${{ env.REPO_LOWERCASE }}:${{ env.BRANCH_NAME }}
            ghcr.io/${{ env.REPO_LOWERCASE }}:latest

      - name: Checkout Infra Repository
        uses: actions/checkout@v4
        with:
          repository: embedez/kubectl
          ref: 'main'
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: infrastructure

      - name: Get Docker Image Digest
        id: digest
        run: |
          IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.DOCKER_IMAGE }})
          echo "IMAGE_DIGEST=$IMAGE_DIGEST" >> $GITHUB_ENV

      - name: Set Deployment Path
        run: |
          echo "DEPLOY_PATH=cdn/perm" >> $GITHUB_ENV
          echo "DEPLOY_PATH2=cdn/temp" >> $GITHUB_ENV

      - name: Verify File Presence
        run: |
          echo "Checking file presence for both deployments:"
          cat infrastructure/${{ env.DEPLOY_PATH }}/deploy.yml

      - name: Update Deployment Manifests
        run: |
          echo "Updating deployment manifests:"
          # Update first deployment
          echo "Updating ${{ env.DEPLOY_PATH }}"
          sed -i "s|image: ghcr.io/${{ env.REPO_LOWERCASE }}:.*|image: ${{ env.DOCKER_IMAGE }}|g" infrastructure/${{ env.DEPLOY_PATH }}/deploy.yml
          
          # Update second deployment
          echo "Updating ${{ env.DEPLOY_PATH2 }}"
          sed -i "s|image: ghcr.io/${{ env.REPO_LOWERCASE }}:.*|image: ${{ env.DOCKER_IMAGE }}|g" infrastructure/${{ env.DEPLOY_PATH2 }}/deploy.yml

      - name: Stage and Commit Changes
        run: |
          cd infrastructure
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.DEPLOY_PATH }}/deploy.yml ${{ env.DEPLOY_PATH2 }}/deploy.yml
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update image to version ${{ env.VERSION }}"
            git push origin main
          fi